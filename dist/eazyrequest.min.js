!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("EazyRequest",[],t):"object"==typeof exports?exports.EazyRequest=t():e.EazyRequest=t()}(self,(()=>(()=>{"use strict";var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{EazyRequest:()=>r});class r{constructor(e){if(!e||"string"!=typeof e)return new Error("base URL must be string");this.baseURL=e}async#e(e,t="GET",r){try{const o=await fetch(`${this.baseURL}${e}`,{method:t,body:r?JSON.stringify(r):void 0});return await o.json()}catch(e){console.log(e)}}async get(e){if(!e)throw new Error("endpoint must be not empty");try{if("string"==typeof e)return await this.#e(e,"GET");throw new Error("endpoint type must be string")}catch(e){console.log(e)}}async getByParams(e,t){if(!t)throw new Error("params must be object");try{if("object"!=typeof t||!Object.keys(t).length)throw new Error("params must be a non-empty object");try{if(Array.isArray(t))throw new Error("must be a object not array");{let r=(e=>Object.entries(e).map((([e,t])=>`${e}=${t}`)).join("&"))(t),{endpointToLower:o}=(e=>({endpointToLower:e.split(" ").join("").toLowerCase()}))(e);return await this.#e(`${o}?${r}`,"GET")}}catch(e){return console.log(e)}}catch(e){return console.log(e)}}async post(e,t){await this.#e(e,"POST",t)}}return t})()));